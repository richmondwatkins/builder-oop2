{"version":3,"file":"destroy.js","sources":["/Users/richmondwatkins/Documents/Code/builder-oop2/app/static/js/es6/destroy.es6.js"],"names":[],"mappings":"AAGA,CAAC,SAAS;AACR,CAAA,aAAY,CAAC;AAKb,CAAA,KAAI,EAAE,CAAC;CAEP,SAAS,KAAI,CAAC,CAAC;AACb,CAAA,IAAC,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC3B,CAAA,SAAM,EAAE,CAAC;GACV;AAEG,CAFH,IAEG,CAAA,IAAI,EAAG,MAAK,CAAC;AACb,CAAJ,IAAI,CAAA,KAAK,CAAC;AAEN,CAAJ,IAAI,CAAA,SAAS,CAAC;CAEd,SAAS,KAAI,CAAC,CAAC;AACf,CAAA,YAAS,EAAG,CAAA,CAAC,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;AAC7B,CAAA,UAAO,IAAI,CAAC,SAAS,CAAC,CAAC;AAGvB,CAAA,OAAI,EAAG,EAAC,IAAI,CAAC;AACb,CAAA,IAAC,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;CAEjC,OAAG,IAAI,CAAE;AAEP,CAAA,UAAK,EAAE,CAAC;KAET,KAAI;AACH,CAAA,kBAAa,CAAC,KAAK,CAAC,CAAC;KAGtB;CAAA,EACF;AAED,CAFC,SAEQ,MAAK,CAAC,CAAC;AACd,CAAA,gBAAa,CAAC,KAAK,CAAC,CAAC;AACrB,CAAA,QAAK,EAAG,CAAA,WAAW,CAAC,OAAO,CAAE,KAAI,CAAC,CAAC;GACpC;AAID,CAJC,SAIQ,OAAM,CAAC,CAAC;AAClB,CAAA,IAAC,CAAC,SAAS,CAAC,WAAW,CAAC;AACxB,CAAA,UAAK,CAAE,GAAE;AACT,CAAA,UAAK,CAAE;AACN,CAAA,YAAK,CAAE,EAAC;AACR,CAAA,YAAK,CAAE,MAAK;CAAA,MACZ;AAED,CAAA,kBAAa,CAAE;AACd,CAAA,YAAK,CAAE,EAGL,CAAC,KAAK,CAAC,CACH,MAAM,CAAE,CAAA,CAAC,CAAC,QAAQ,CAAC,CACvB,CAAC,CAEF;AAED,CAAA,aAAM,CAAE,EAEP,QAAQ,CAAE,IAAG,CAEb;CAAA,MACD;CAAA,IAED,CAAC,CAAC;GAEA;AAkBD,CAlBC,SAkBQ,QAAO,CAAC;AACf,CAAA,IAAC,CAAC,wBAAwB,CAAC,IAAI,WAAE,CAAC,CAAC,CAAA,CAAC;YAAG,CAAA,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC;OAAC,KAAK,WAAE,CAAC,CAAC,CAAA,CAAC;AAElE,CAAJ,QAAI,CAAA,IAAI,EAAG,CAAA,CAAC,EAAC,gBAAiB,EAAA,EAAC,EAAA,IAAG,EAAC,CAAC;AAEnC,CAAA,SAAI,EAAC,SAAU,EAAA,EAAC,EAAA,QAAO,EAAE,MAAK,CAAE,KAAI,YAAE,CAAC,CAAE;AAGtC,CAAA,WAAI,YAAY,CAAC,CAAC,CAAC,CAAC;CACpB,WAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;AAC5B,CAAA,uBAAc,KAAK,EAAE,CAAC;SACvB;CAAA,MACF,EAAC,CAAC;OAGH,CAAC;GAEJ;CAEF,CAAC,EAAE,CAAC","sourcesContent":["/* global ajax, audioBeanStalk */\n\n\n(function(){\n  'use strict';\n\n\n\n\n  init();\n\n  function init(){\n    $('#autogrow').click(grow);\n    slider();\n  }\n\n  var isOn = false;\n  var timer;\n\n  var chopValue;\n\n  function grow(){\n  chopValue = $('#slider').val();\n    console.log(chopValue);\n\n\n    isOn = !isOn; //use the not ! so that it can toggle on and off\n    $('#autogrow').toggleClass('on');\n\n    if(isOn) {\n\n      start();\n\n    }else{\n      clearInterval(timer);\n      // $('#slider').empty();\n\n    }\n  }\n\n  function start(){\n    clearInterval(timer); //always a good idea to clear interval before starting to prevent multpile timers from running at same time\n    timer = setInterval(growing, 1000);\n  }\n\n\n\n  function slider(){\n $('#slider').noUiSlider({\n\tstart: 50,\n\trange: {\n\t\t'min': 0,\n\t\t'max': 10000\n\t},\n\n\tserialization: {\n\t\tlower: [\n\t\t// Write the values to\n\t\t// an input with id 'field'\n\t\t  $.Link({\n\t\t      target: $('#field')\n\t\t\t})\n\n\t\t],\n\n\t\tformat: {\n\t\t// Set formatting\n\t\t\tthousand: ',',\n\t\t\t// prefix: '$'\n\t\t}\n\t}\n\n});\n\n  }\n\n  // exports.chop = (req, res)=>{\n  //   Tree.findByTreeId(req.params.treeId, tree=>{\n  //     User.findByUserId(req.params.userId, user=>{\n  //       tree.chop(user);\n  //       tree.save(()=>{\n  //         user.save(()=>{\n  //           tree.save(()=>res.render('trees/tree', {tree:tree}));\n  //         });\n  //       });\n  //     });\n  //   });\n  // };\n\n\n\n\n  function growing() {\n    $('.alive:not(.beanstalk)').map((i,d)=>$(d).attr('data-id')).each((i,v)=>{\n\n    var tree = $(`.tree[data-id=${v}]`);\n\n     ajax(`/trees/${v}/grow`, 'put', null, h=>{\n        // var t = tree.data();\n      //  console.log(t);\n        tree.replaceWith(h);\n        if($(h).hasClass('beanstalk')){\n          audioBeanStalk.play();\n        }\n      });\n\n\n    });\n\n  }\n\n})();\n"]}